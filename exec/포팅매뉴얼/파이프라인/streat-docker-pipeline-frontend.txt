pipeline {
    agent any
    
    tools {
        nodejs ("nodejs")
    }
    
    environment {
        DOCKER = 'sudo docker'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-jenkins')
        NEXT_PUBLIC_NAVER_MAP_CLIENT_ID='dszyikg4wl'
        NEXT_PUBLIC_NAVER_SEARCH_CLIENT_ID='yIt6kQcxayaHWJZkVAWH'
        NEXT_PUBLIC_NAVER_SEARCH_CLIENT_SECRET='_WJvJixMWD'
        
        NEXT_PUBLIC_KAKAO_APP_KEY='2348144c073d82c2759f313c40d3c9c9'
        NEXT_PUBLIC_KAKAO_REDIRECT_URI='https://j11a307.p.ssafy.io/services/users/login/kakao/auth'
        
        NEXT_PUBLIC_BACK_URL='https://j11a307.p.ssafy.io'
        
        NEXT_PUBLIC_BUSINESS_REGISTRATION_NUMBER_SERVICE_KEY='UV5m4ySwHIUkRftLMpcP4ESCQpWdR1g2vSHzYb4pN6ACCSW16gsVTRYKRdSUEf%2BDUwxR0BzFh4I9jZu%2BWM9vjg%3D%3D'
        NEXT_PUBLIC_OPENWEATHER_API_KEY='9fa087e3ff5b0b7bf3d83f729dc28656'
        
        NEXT_PUBLIC_VAPID_KEY='BGB9kZH-Dwk7iDUgpUCBbItWYHGQVNeHDy5Na7uRazXfYIRo86CHfZmaTnNFYJE1q7ewN0z6On1TVor8cYgpJXA'
    }


    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'front', // 여기서 브랜치가 다를 수 있음
                    credentialsId: 'f75c072f-4462-4e7f-8d28-c69f6c42c575',
                    url: 'https://lab.ssafy.com/s11-fintech-finance-sub1/S11P21A307.git'
            }
        }

        stage('Build image') {
            steps {
                sh 'pwd'
                sh 'ls -al'
               
                dir('front') {
                    sh 'ls -al'
                    sh """
                    docker build \
                    --build-arg NEXT_PUBLIC_NAVER_MAP_CLIENT_ID=${NEXT_PUBLIC_NAVER_MAP_CLIENT_ID} \
                    --build-arg NEXT_PUBLIC_NAVER_SEARCH_CLIENT_ID=${NEXT_PUBLIC_NAVER_SEARCH_CLIENT_ID} \
                    --build-arg NEXT_PUBLIC_NAVER_SEARCH_CLIENT_SECRET=${NEXT_PUBLIC_NAVER_SEARCH_CLIENT_SECRET} \
                    --build-arg NEXT_PUBLIC_KAKAO_APP_KEY=${NEXT_PUBLIC_KAKAO_APP_KEY} \
                    --build-arg NEXT_PUBLIC_KAKAO_REDIRECT_URI=${NEXT_PUBLIC_KAKAO_REDIRECT_URI} \
                    --build-arg NEXT_PUBLIC_BACK_URL=${NEXT_PUBLIC_BACK_URL} \
                    --build-arg NEXT_PUBLIC_BUSINESS_REGISTRATION_NUMBER_SERVICE_KEY=${NEXT_PUBLIC_BUSINESS_REGISTRATION_NUMBER_SERVICE_KEY} \
                    --build-arg NEXT_PUBLIC_OPENWEATHER_API_KEY=${NEXT_PUBLIC_OPENWEATHER_API_KEY} \
                    --build-arg NEXT_PUBLIC_VAPID_KEY=${NEXT_PUBLIC_VAPID_KEY} \
                     -t junbeomson/streat-frontend .
                    """
                }
                echo 'Build image...'
                echo "NEXT_PUBLIC_NAVER_MAP_CLIENT_ID: ${NEXT_PUBLIC_NAVER_MAP_CLIENT_ID}"
            }
        }
        
        stage('Login'){
            steps{
              sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin' // docker hub 로그인
            }
        }
        
        
         stage('Remove Previous image') {
            steps {
                script {
                    try {
                        sh 'docker stop streat-frontend || true'
                        sh 'docker rm streat-frontend || true'
                        sh 'docker stop nginx || true'
                        sh 'docker rm nginx || true'
                        
                    } catch (e) {
                        echo 'fail to stop and remove container'
                    }
                }
            }
        }
        
        stage('Push Image to Docker Hub') {
            steps {
                // Docker Hub에 이미지 푸시
                sh 'docker push junbeomson/streat-frontend'
                echo 'Pushed image to Docker Hub'
            }
        }
        
        // stage('Run Frontend Container') {
        //     steps {
        //         // 컨테이너 실행 (포트와 환경 변수 설정)
        //         sh "docker run -d -p 3000:3000 --name streat-frontend junbeomson/streat-frontend npm run start"
        //     }
        // }
        
        stage('Run New image') {
            steps {
                dir('front') {
                    sh 'ls -l ./nginx/default.conf'
                    sh 'chmod 644 ./nginx/default.conf'
                    sh 'JASYPT_PASSWORD=streatpassword docker compose up -d streat-frontend'
                    
                    sh 'docker compose build nginx'
                    sh 'JASYPT_PASSWORD=streatpassword docker compose up -d nginx'
                    echo 'Run New member image'    
                }
            }
        }
       
    }
}